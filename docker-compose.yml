services:

  client:
    build:
      context: ./services/client
    container_name: client
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

  commande:
    build:
      context: ./services/commande
    container_name: commande
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

  panier:
    build:
      context: ./services/panier
    container_name: panier
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

  produits:
    build:
      context: ./services/produits
    container_name: produits
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

  rapport:
    build:
      context: ./services/rapport
    container_name: rapport
    ports:
      - "8005:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

  stock1:
    build:
      context: ./services/stock
    container_name: stock1
    ports:
      - "8006:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

  stock2:
    build:
      context: ./services/stock
    container_name: stock2
    ports:
      - "8016:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

  utilisateurs:
    build:
      context: ./services/utilisateurs
    container_name: utilisateurs
    ports:
      - "8007:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

  ventes:
    build:
      context: ./services/ventes
    container_name: ventes
    ports:
      - "8008:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - client
      - commande
      - panier
      - produits
      - rapport
      - stock1
      - stock2
      - utilisateurs
      - ventes

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  krakend:
    image: devopsfaith/krakend
    container_name: krakend
    ports:
      - "8081:8080"
    volumes:
      - ./krakend.json:/etc/krakend/krakend.json
    command: ["run", "-c", "/etc/krakend/krakend.json"]
    depends_on:
      - client
      - commande
      - panier
      - produits
      - rapport
      - stock1
      - stock2
      - utilisateurs
      - ventes


volumes:
  pgdata:
