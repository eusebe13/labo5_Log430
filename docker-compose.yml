services:

  client:
    build:
      context: ./services/client
    container_name: client
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - app_net

  commande:
    build:
      context: ./services/commande
    container_name: commande
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - app_net

  panier:
    build:
      context: ./services/panier
    container_name: panier
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - app_net

  produits:
    build:
      context: ./services/produits
    container_name: produits
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - app_net

  rapport:
    build:
      context: ./services/rapport
    container_name: rapport
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - app_net

  stock1:
    build:
      context: ./services/stock
    container_name: stock1
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - app_net

  stock2:
    build:
      context: ./services/stock
    container_name: stock2
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - app_net

  utilisateurs:
    build:
      context: ./services/utilisateurs
    container_name: utilisateurs
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - app_net

  ventes:
    build:
      context: ./services/ventes
    container_name: ventes
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/app_db
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - app_net

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_net

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app_net

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app_net

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app_net

  krakend:
    image: krakend
    container_name: krakend
    ports:
      - "8081:8080"
    volumes:
      - ./gateway/krakend.json:/etc/krakend/krakend.json:ro
    command: ["run", "-c", "/etc/krakend/krakend.json"]
    depends_on:
      - client
      - commande
      - panier
      - produits
      - rapport
      - stock1
      - stock2
      - utilisateurs
      - ventes
    networks:
      - app_net


volumes:
  pgdata:
  grafana_data:

networks:
  app_net:
    driver: bridge
